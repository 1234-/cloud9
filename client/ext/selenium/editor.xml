<a:application xmlns:a="http://ajax.org/2005/aml">
    <a:state id="stTestRecord" />

    <a:hbox id="mainUiRecorder" anchors="0 0 0 0" edge="0 4 3 6" padding="3" visible="false" splitters="true">
        <a:vbox width="340" id="vboxUiRecorder" padding="4">
            <a:bar id="barUiRecorder" skin="basic" style="padding:1px 2px 2px 2px;background:#2f3032;height:27px;border:1px solid #222425;border-radius:4px;">
                <a:hbox align="center" padding="0">
                    <a:button id="btnUiRecordStart" 
                      skin     = "c9-toolbarbutton" 
                      icon     = "{stTestRecord.active ? 'recording-animation.gif' : 'record.png'}" 
                      class    = "record" 
                      caption  = "{stTestRecord.active ? 'Stop' : 'Record'}" />
                    
                    <a:splitbutton id="btnTestRunInSelEditor"
                      icon     = "run.png"
                      caption  = "Run"
                      visible  = "{!stTestRun.active}"
                      disabled = "{stTestRecord.active}"
                      onclick  = "require('ext/selenium/editor').run();"
                      submenu  = "mnuRunSettings" />
                    
                    <a:button id="btnTestStopInSelEditor"
                      icon     = "stop.png"
                      caption  = "Stop"
                      skin     = "c9-toolbarbutton"
                      onclick  = "require('ext/selenium/editor').stopPlayback()"
                      visible  = "{!btnTestRunInSelEditor.visible}" />
                    
                    <a:button id="btnUiRecordRemove" 
                      skin     = "c9-toolbarbutton" 
                      disabled = "{!dgUiRecorder.selected}" 
                      onclick  = "dgUiRecorder.remove()"
                      caption  = "Remove" />
                      
                    <a:splitbutton id="btnUiRecordInsert" 
                      onclick  = "mnuInsert.dispatchEvent('itemclick')"
                      caption  = "Insert" 
                      submenu  = "mnuInsert" />
                    
                    <a:menu id="mnuInsert" 
                      onitemclick = "
                        var se = require('ext/selenium/editor');
                        if (event.value == 'assert-picker')
                            se.startAddAssert();
                        else {
                            var s = event.value.split('-');
                            se.addNewNode(s[0], s[1]);
                        }
                      ">
                        <a:item type="radio" value="test" caption="Test" selected="true" />
                        <a:item type="radio" value="action" caption="Action" />
                        <a:item type="radio" value="assert-picker" disabled="{!!%[{dgUiRecorder.selected}::self::test]}" caption="Assertion (picker)" />
                        <a:item type="radio" value="assert" disabled="{!!%[{dgUiRecorder.selected}::self::test]}" caption="Assertion (code)" />
                        <a:divider skin="c9-divider-hor" caption="Actions" margin="10 0 5 0" />
                        <a:item type="radio" value="action-setTimeout" caption="setTimeout" />
                        <a:item type="radio" value="action-hold" caption="hold" />
                        <a:item type="radio" value="action-waitFor" caption="waitFor" />
                        <a:item type="radio" value="action-get" caption="get" />
                        <a:item type="radio" value="action-execute" caption="execute" />
                        <a:item type="radio" value="action-executeAsync" caption="executeAsync" />
                    </a:menu>
                     
                    <a:button skin="c9-toolbarbutton" onclick="
                        uiRecordPreview.setAttribute('visible', !uiRecordPreview.visible);
                        if (uiRecordPreview.visible) {
                            vboxUiRecorder.setAttribute('width', vboxUiRecorder.lastWidth);
                            vboxUiRecorder.removeAttribute('flex');
                        }
                        else {
                            vboxUiRecorder.lastWidth = vboxUiRecorder.$ext.offsetWidth;
                            vboxUiRecorder.removeAttribute('width');
                            vboxUiRecorder.setAttribute('flex', 2);
                        }
                    " caption="{uiRecordPreview.visible ? '&gt;&gt;' : '&lt;&lt;'}" />
                </a:hbox>
            </a:bar>
            
            <a:menu id="mnuUiRecorder">
                <a:item match="[node()]" onclick="
                    apf.clipboard.cutSelection(apf.activeElement);
                ">Cut</a:item>
                <a:item match="[node()]" onclick="
                    apf.clipboard.copySelection(apf.activeElement);
                ">Copy</a:item>
                <a:item 
                  disabled="{
                    apf.clipboard.empty ||
                    !apf.activeElement.isDropAllowed(
                        apf.clipboard.data[0], apf.activeElement.selected);
                  }" 
                  onclick="
                    apf.clipboard.pasteSelection(apf.activeElement);
                  ">Paste</a:item>
                <a:divider />
                <a:item match="[action|assert|test]" onclick="dgUiRecorder.remove()">Remove</a:item>
                <a:item match="[action]" onclick="require('ext/selenium/editor').startAddAssert()">Add Assertion</a:item>
            </a:menu>
        
            <a:bar skin="basic" flex="1">
                <a:datagrid 
                  id          = "dgUiRecorder"
                  options     = "size"
                  anchors     = "0 0 0 0"
                  each        = "[action[not(@execute='false')]|assert|test|error]"
                  multiselect = "true"
                  class       = "noscrollbar"
                  startcollapsed = "false"
                  contextmenu = "mnuUiRecorder"
                  onmouseover = "require('ext/selenium/editor').highlightElement(event)"
                  onmouseout  = "require('ext/selenium/editor').hideHighlightElements(event)">
                    <a:column id="colUiRecorder1" caption="Name" width="40%" icon="{require('ext/selenium/editor').getIcon([@status])}" value="[@name]" tree="1" check2="1" editor="textbox" skin="tbsimple" class="tbtree" />
                    <a:column id="colUiRecorder2" caption="Value" width="61%" value="[@value]" editor="textbox" skin="tbsimple" />
                    
                    <a:css match="[test]" value="testhead" />
                    <a:css match="[node()[@status='5']]" value="current_execution" />
                    
                    <a:drag match="[action|assert|test]" />
                    <a:drop 
                      match  = "[action]" 
                      target = "[action]" 
                      action = "insert-before" />
                    <a:drop 
                      match  = "[action]" 
                      target = "[test]" 
                      action = "tree-append" />
                    <a:drop 
                      match  = "[test]" 
                      target = "[test]" 
                      action = "insert-before" />
                    <a:drop 
                      match  = "[assert]" 
                      target = "[action]" 
                      action = "tree-append" />
                    <a:drop 
                      match  = "[assert]" 
                      target = "[assert]" 
                      action = "insert-before" />
                </a:datagrid>
                
                <a:scrollbar
                    for      = "dgUiRecorder"
                    id       = "sbUiRecorder"
                    margin   = "2"
                    skin     = "sbios"
                    top      = "20"
                    right    = "1"
                    bottom   = "1"
                    width    = "7"
                    showonscroll = "true"
                />
            </a:bar>
        </a:vbox>
        <a:vbox id="uiRecordPreview" flex="3" style="border:1px solid #c6c6c6">
            <a:bar skin="basic" style="padding:2px;background:white;">
                <a:hbox align="center" padding="3" edge="0 20 0 20">
                    <a:button onclick="brSeleniumPreview.back()">&lt;</a:button>
                    <a:button onclick="brSeleniumPreview.forward()">&gt;</a:button>
                    <a:button onclick="brSeleniumPreview.reload()">reload</a:button>
                    <a:textbox flex="1" focusselect="true" id="tbUiRecordLoc" />
                    <a:img src="/static/style/images/file-tree-load-spinner.gif" id="uiRecordLoadingIndicator" />
                </a:hbox>
            </a:bar>
            <a:browser id="brSeleniumPreview" flex="1" style="border: 0;background:white;" />
        </a:vbox>
    </a:hbox>
</a:application>